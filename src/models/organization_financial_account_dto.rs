/*
 * My Data My Consent - Developer API
 *
 * Unleashing the power of data consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@mydatamyconsent.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct OrganizationFinancialAccountDto {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "organizationId", skip_serializing_if = "Option::is_none")]
    pub organization_id: Option<String>,
    #[serde(rename = "organizationName", skip_serializing_if = "Option::is_none")]
    pub organization_name: Option<String>,
    #[serde(rename = "beneficiaryName", skip_serializing_if = "Option::is_none")]
    pub beneficiary_name: Option<String>,
    #[serde(rename = "accountNumber", skip_serializing_if = "Option::is_none")]
    pub account_number: Option<String>,
    #[serde(rename = "routingNumber", skip_serializing_if = "Option::is_none")]
    pub routing_number: Option<String>,
    #[serde(rename = "isPrimary", skip_serializing_if = "Option::is_none")]
    pub is_primary: Option<bool>,
    #[serde(rename = "isVerified", skip_serializing_if = "Option::is_none")]
    pub is_verified: Option<bool>,
    #[serde(rename = "logoUrl", skip_serializing_if = "Option::is_none")]
    pub logo_url: Option<String>,
    #[serde(rename = "bankName", skip_serializing_if = "Option::is_none")]
    pub bank_name: Option<String>,
    #[serde(rename = "bankAccountType", skip_serializing_if = "Option::is_none")]
    pub bank_account_type: Option<crate::models::BankAccountType>,
    #[serde(rename = "bankAccountProofUrl", skip_serializing_if = "Option::is_none")]
    pub bank_account_proof_url: Option<String>,
    #[serde(rename = "fileType", skip_serializing_if = "Option::is_none")]
    pub file_type: Option<crate::models::FileType>,
}

impl OrganizationFinancialAccountDto {
    pub fn new() -> OrganizationFinancialAccountDto {
        OrganizationFinancialAccountDto {
            id: None,
            organization_id: None,
            organization_name: None,
            beneficiary_name: None,
            account_number: None,
            routing_number: None,
            is_primary: None,
            is_verified: None,
            logo_url: None,
            bank_name: None,
            bank_account_type: None,
            bank_account_proof_url: None,
            file_type: None,
        }
    }
}


