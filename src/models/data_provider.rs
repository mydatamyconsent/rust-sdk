/*
 * My Data My Consent - Developer API
 *
 * Unleashing the power of data consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.
 *
 * The version of the OpenAPI document: v1
 * Contact: support@mydatamyconsent.com
 * Generated by: https://openapi-generator.tech
 */




#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct DataProvider {
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    #[serde(rename = "logoUrl", skip_serializing_if = "Option::is_none")]
    pub logo_url: Option<String>,
    #[serde(rename = "website", skip_serializing_if = "Option::is_none")]
    pub website: Option<String>,
    #[serde(rename = "email", skip_serializing_if = "Option::is_none")]
    pub email: Option<String>,
    #[serde(rename = "supportPhoneNumber", skip_serializing_if = "Option::is_none")]
    pub support_phone_number: Option<String>,
    #[serde(rename = "privacyPolicy", skip_serializing_if = "Option::is_none")]
    pub privacy_policy: Option<String>,
    #[serde(rename = "termOfService", skip_serializing_if = "Option::is_none")]
    pub term_of_service: Option<String>,
    #[serde(rename = "category", skip_serializing_if = "Option::is_none")]
    pub category: Option<String>,
    #[serde(rename = "dataProtectionOfficer", skip_serializing_if = "Option::is_none")]
    pub data_protection_officer: Option<Box<crate::models::DataProtectionOfficer>>,
    #[serde(rename = "supportedAccountTypes", skip_serializing_if = "Option::is_none")]
    pub supported_account_types: Option<Vec<String>>,
    #[serde(rename = "supportedDocumentTypes", skip_serializing_if = "Option::is_none")]
    pub supported_document_types: Option<Vec<String>>,
}

impl DataProvider {
    pub fn new() -> DataProvider {
        DataProvider {
            id: None,
            name: None,
            logo_url: None,
            website: None,
            email: None,
            support_phone_number: None,
            privacy_policy: None,
            term_of_service: None,
            category: None,
            data_protection_officer: None,
            supported_account_types: None,
            supported_document_types: None,
        }
    }
}


