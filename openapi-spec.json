{
  "openapi": "3.0.0",
  "info": {
    "title": "My Data My Consent - Developer API",
    "description": "Unleashing the power of consent by establishing trust. The Platform Core Developer API defines a set of capabilities that can be used to request, issue, manage and update data, documents and credentials by organizations. The API can be used to request, manage and update Decentralised Identifiers, Financial Data, Health Data issue Documents, Credentials directly or using OpenID Connect flows, and verify Messages signed with DIDs and much more.",
    "version": "1.0",
    "termsOfService": "https://mydatamyconsent.com/en-us/legal/terms-of-service",
    "contact": {
      "name": "Developer Support",
      "url": "https://mydatamyconsent.com/en-us/contact-us",
      "email": "support@mydatamyconsent.com"
    },
    "license": {
      "name": "EULA & Terms of Service",
      "url": "https://mydatamyconsent.com/en-us/legal/terms-of-service"
    }
  },
  "servers": [
    {
      "url": "https://api.mydatamyconsent.com",
      "description": "Production URL"
    }
  ],
  "tags": [
    {
      "name": "DataProcessingAgreements",
      "description": "Data Processing Agreements related operations."
    },
    {
      "name": "DataProvidersDiscovery",
      "description": "Data Providers Discovery Operations."
    },
    {
      "name": "Individuals",
      "description": "Individuals related operations."
    },
    {
      "name": "Organizations",
      "description": "Organizations related operations."
    },
    {
      "name": "SupportedIdentifiers",
      "description": "Supported Identifiers related operations."
    }
  ],
  "webhooks": {
    "consent_request_approved": {
      "summary": "sent when consent request is approved by the user / organization users.",
      "requestBody": {
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/ConsentRequestApproved"
            }
          }
        },
        "required": true
      },
      "responses": {
        "200": {
          "description": ""
        }
      }
    }
  },
  "paths": {
    "/v1/individuals/consent-templates": {
      "get": {
        "tags": [
          "Individuals"
        ],
        "summary": "Get the paginated list of individual consent templates.",
        "parameters": [
          {
            "name": "page_no",
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfConsentRequestTemplates"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Individuals:ConsentRequestTemplates:Read"
            ]
          }
        ]
      }
    },
    "/v1/individuals/consent-templates/{template_id}": {
      "get": {
        "tags": [
          "Individuals"
        ],
        "summary": "Get Individual consent template details by consent id.",
        "parameters": [
          {
            "name": "template_id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndividualConsentRequestTemplateDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Individuals:ConsentRequestTemplates:Read"
            ]
          }
        ]
      }
    },
    "/v1/individuals/consent-requests": {
      "post": {
        "tags": [
          "Individuals"
        ],
        "summary": "Create individual consent request.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConsentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IndividualConsentRequestDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Individuals:ConsentRequests:Request"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Individuals"
        ],
        "summary": "Get all consent requests sent to Individuals.",
        "parameters": [
          {
            "name": "status",
            "schema": {
              "$ref": "#/components/schemas/DataConsentStatus"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "from_date_time",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "to_date_time",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "page_no",
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfIndividualConsentRequestDetailss"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Individuals:ConsentRequests:Read"
            ]
          }
        ]
      }
    },
    "/v1/individuals/consent-requests/{request_id}": {
      "get": {
        "tags": [
          "Individuals"
        ],
        "summary": "Get Individual data request by id.",
        "parameters": [
          {
            "name": "request_id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsentRequest"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Individuals:ConsentRequests:Read"
            ]
          }
        ]
      }
    },
    "/v1/individuals/consent-requests/{request_id}/cancel": {
      "put": {
        "tags": [
          "Individuals"
        ],
        "summary": "Cancel the Individual data request by id.",
        "parameters": [
          {
            "name": "request_id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Individuals:ConsentRequests:Cancel"
            ]
          }
        ]
      }
    },
    "/v1/individuals/consents": {
      "get": {
        "tags": [
          "Individuals"
        ],
        "summary": "Get the paginated list of Individual consents.",
        "parameters": [
          {
            "name": "status",
            "schema": {
              "$ref": "#/components/schemas/DataConsentStatus"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "from_date_time",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "to_date_time",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "page_no",
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfConsents"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Individuals:Consents:Read"
            ]
          }
        ]
      }
    },
    "/v1/individuals/consents/{consent_id}": {
      "get": {
        "tags": [
          "Individuals"
        ],
        "summary": "Get Individuals consent details by consent id.",
        "parameters": [
          {
            "name": "consent_id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsentDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Individuals:Consents:Read"
            ]
          }
        ]
      }
    },
    "/v1/individuals/consents/{consent_id}/documents": {
      "get": {
        "tags": [
          "Individuals"
        ],
        "summary": "Get Individual consented document by consent id.",
        "parameters": [
          {
            "name": "consent_id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConsentedDocument"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Individuals:Consents:Read"
            ]
          }
        ]
      }
    },
    "/v1/individuals/consents/{consent_id}/documents/{document_id}": {
      "get": {
        "tags": [
          "Individuals"
        ],
        "summary": "Get Individual consented document by document id.",
        "parameters": [
          {
            "name": "consent_id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          },
          {
            "name": "document_id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsentedDocument"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Individuals:Consents:Read"
            ]
          }
        ]
      }
    },
    "/v1/individuals/consents/{consent_id}/documents/{document_id}/download": {
      "get": {
        "tags": [
          "Individuals"
        ],
        "summary": "Download Individual consented document by document id.",
        "parameters": [
          {
            "name": "consent_id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          },
          {
            "name": "document_id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "headers": {
              "CONTENT-DISPOSITION": {
                "required": true,
                "deprecated": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Individuals:Consents:Read"
            ]
          }
        ]
      }
    },
    "/v1/individuals/consents/{consent_id}/health/fhir/bundle": {
      "get": {
        "tags": [
          "Individuals"
        ],
        "summary": "Get Individual consented document by consent id.",
        "parameters": [
          {
            "name": "consent_id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {}
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Individuals:Consents:Read"
            ]
          }
        ]
      }
    },
    "/v1/individuals/consents/{consent_id}/financial-accounts": {
      "get": {
        "tags": [
          "Individuals"
        ],
        "summary": "Get all individual consented financial accounts.",
        "parameters": [
          {
            "name": "consent_id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FinancialAccount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Individuals:Consents:Read"
            ]
          }
        ]
      }
    },
    "/v1/individuals/consents/{consent_id}/financial-accounts/{account_id}": {
      "get": {
        "tags": [
          "Individuals"
        ],
        "summary": "Get individual consented financial account details.",
        "parameters": [
          {
            "name": "consent_id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          },
          {
            "name": "account_id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialAccount"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Individuals:Consents:Read"
            ]
          }
        ]
      }
    },
    "/v1/individuals/consents/{consent_id}/financial-accounts/{account_id}/transactions": {
      "get": {
        "tags": [
          "Individuals"
        ],
        "summary": "Get individual consented financial account transactions.",
        "parameters": [
          {
            "name": "consent_id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          },
          {
            "name": "account_id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          },
          {
            "name": "filters",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "from_date_time",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "to_date_time",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "page_no",
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfFinancialAccountTransactions"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Individuals:Consents:Read"
            ]
          }
        ]
      }
    },
    "/v1/individuals/documents/types": {
      "get": {
        "tags": [
          "Individuals"
        ],
        "summary": "Get paginated list of registered document types.",
        "parameters": [
          {
            "name": "page_no",
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfDocumentTypes"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Individuals:DocumentTypes:Read"
            ]
          }
        ]
      }
    },
    "/v1/individuals/documents/issued": {
      "get": {
        "tags": [
          "Individuals"
        ],
        "summary": "Get paginated list of issued documents of given document type.",
        "parameters": [
          {
            "name": "document_type_id",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": true,
            "deprecated": false
          },
          {
            "name": "from_date_time",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "to_date_time",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "page_no",
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfIssuedDocuments"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Individuals:Documents:Read"
            ]
          }
        ]
      }
    },
    "/v1/individuals/documents/issued/{document_id}": {
      "get": {
        "tags": [
          "Individuals"
        ],
        "summary": "Get issued document.",
        "parameters": [
          {
            "name": "document_id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssuedDocument"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Individuals:Documents:Read"
            ]
          }
        ]
      }
    },
    "/v1/individuals/documents/issue": {
      "post": {
        "tags": [
          "Individuals"
        ],
        "summary": "Issue a new document to an individual user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentIssueRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentIssueRequestDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Individuals:Documents:Issue"
            ]
          }
        ]
      }
    },
    "/v1/individuals/documents/issue/{issue_request_id}/upload": {
      "post": {
        "tags": [
          "Individuals"
        ],
        "summary": "Upload a document for issuance request of individual.",
        "parameters": [
          {
            "name": "issue_request_id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "file"
                ],
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadDocumentResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Individuals:Documents:Issue"
            ]
          }
        ]
      }
    },
    "/v1/organizations/consent-templates": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get the paginated list of organization consent templates.",
        "parameters": [
          {
            "name": "page_no",
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfConsentRequestTemplates"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Organizations:ConsentRequestTemplates:Read"
            ]
          }
        ]
      }
    },
    "/v1/organizations/consent-templates/{template_id}": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get Organization consent template details by consent id.",
        "parameters": [
          {
            "name": "template_id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationConsentRequestTemplateDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Organizations:ConsentRequestTemplates:Read"
            ]
          }
        ]
      }
    },
    "/v1/organizations/consent-requests": {
      "post": {
        "tags": [
          "Organizations"
        ],
        "summary": "Create consent request for an Organization.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateConsentRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OrganizationConsentRequestDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Organizations:ConsentRequests:Request"
            ]
          }
        ]
      },
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get all consent requests sent to Organizations.",
        "parameters": [
          {
            "name": "status",
            "schema": {
              "$ref": "#/components/schemas/DataConsentStatus"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "from_date_time",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "to_date_time",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "page_no",
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfOrganizationConsentRequestDetailss"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Organizations:ConsentRequests:Read"
            ]
          }
        ]
      }
    },
    "/v1/organizations/consent-requests/{request_id}": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get Organization data request by id.",
        "parameters": [
          {
            "name": "request_id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsentRequest"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Organizations:ConsentRequests:Read"
            ]
          }
        ]
      }
    },
    "/v1/organizations/consent-requests/{request_id}/cancel": {
      "put": {
        "tags": [
          "Organizations"
        ],
        "summary": "Cancel the  Organization data request by id.",
        "parameters": [
          {
            "name": "request_id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Organizations:ConsentRequests:Cancel"
            ]
          }
        ]
      }
    },
    "/v1/organizations/consents": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get the paginated list of Organization consents.",
        "parameters": [
          {
            "name": "status",
            "schema": {
              "$ref": "#/components/schemas/DataConsentStatus"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "from_date_time",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "to_date_time",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "page_no",
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfConsents"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Organizations:Consents:Read"
            ]
          }
        ]
      }
    },
    "/v1/organizations/consents/{consent_id}": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get Organization consent request details by consent id.",
        "parameters": [
          {
            "name": "consent_id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsentDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Organizations:Consents:Read"
            ]
          }
        ]
      }
    },
    "/v1/organizations/consents/{consent_id}/documents": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get Organization consent document by consent id.",
        "parameters": [
          {
            "name": "consent_id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ConsentedDocument"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Organizations:Consents:Read"
            ]
          }
        ]
      }
    },
    "/v1/organizations/consents/{consent_id}/documents/{document_id}": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get Organization consent document based on document id and consent id.",
        "parameters": [
          {
            "name": "consent_id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          },
          {
            "name": "document_id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ConsentedDocument"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Organizations:Consents:Read"
            ]
          }
        ]
      }
    },
    "/v1/organizations/consents/{consent_id}/documents/{document_id}/download": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Download Organization consent document by document id.",
        "parameters": [
          {
            "name": "consent_id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          },
          {
            "name": "document_id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            },
            "headers": {
              "CONTENT-DISPOSITION": {
                "required": true,
                "deprecated": false,
                "schema": {
                  "type": "string"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Organizations:Consents:Read"
            ]
          }
        ]
      }
    },
    "/v1/organizations/consents/{consent_id}/financial-accounts": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get all organization consented financial accounts.",
        "parameters": [
          {
            "name": "consent_id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/FinancialAccount"
                  }
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Organizations:Consents:Read"
            ]
          }
        ]
      }
    },
    "/v1/organizations/consents/{consent_id}/financial-accounts/{account_id}": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get organization consented financial account details.",
        "parameters": [
          {
            "name": "consent_id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          },
          {
            "name": "account_id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FinancialAccount"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Organizations:Consents:Read"
            ]
          }
        ]
      }
    },
    "/v1/organizations/consents/{consent_id}/financial-accounts/{account_id}/transactions": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get organization consented financial account transactions.",
        "parameters": [
          {
            "name": "consent_id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          },
          {
            "name": "account_id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          },
          {
            "name": "filters",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "from_date_time",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "to_date_time",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "page_no",
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfFinancialAccountTransactions"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Organizations:Consents:Read"
            ]
          }
        ]
      }
    },
    "/v1/organizations/documents/types": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get paginated list of registered document types.",
        "parameters": [
          {
            "name": "page_no",
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfDocumentTypes"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Organizations:DocumentTypes:Read"
            ]
          }
        ]
      }
    },
    "/v1/organizations/documents/issued": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get paginated list of issued documents of given document type.",
        "parameters": [
          {
            "name": "document_type_id",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": true,
            "deprecated": false
          },
          {
            "name": "from_date_time",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "to_date_time",
            "schema": {
              "type": "string",
              "format": "date-time"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "page_no",
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfIssuedDocuments"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Organizations:Documents:Read"
            ]
          }
        ]
      }
    },
    "/v1/organizations/documents/issued/{document_id}": {
      "get": {
        "tags": [
          "Organizations"
        ],
        "summary": "Get issued document.",
        "parameters": [
          {
            "name": "document_id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/IssuedDocument"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Organizations:Documents:Read"
            ]
          }
        ]
      }
    },
    "/v1/organizations/documents/issue": {
      "post": {
        "tags": [
          "Organizations"
        ],
        "summary": "Issue a new document to an organization.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DocumentIssueRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DocumentIssueRequestDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Organizations:Documents:Issue"
            ]
          }
        ]
      }
    },
    "/v1/organizations/documents/issue/upload/{issue_request_id}": {
      "post": {
        "tags": [
          "Organizations"
        ],
        "summary": "Upload a document for issuance request of Organization.",
        "parameters": [
          {
            "name": "issue_request_id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "required": [
                  "file"
                ],
                "properties": {
                  "file": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/UploadDocumentResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "Organizations:Documents:Issue"
            ]
          }
        ]
      }
    },
    "/v1/data-agreements": {
      "get": {
        "tags": [
          "DataProcessingAgreements"
        ],
        "summary": "Get paginated data processing agreements.",
        "parameters": [
          {
            "name": "page_no",
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfDataProcessingAgreements"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "DataProcessingAgreements:Read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "DataProcessingAgreements"
        ],
        "summary": "Create a data processing agreement.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/CreateDataProcessingAgreement"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingAgreement"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "DataProcessingAgreements:Write"
            ]
          }
        ]
      }
    },
    "/v1/data-agreements/{id}": {
      "get": {
        "tags": [
          "DataProcessingAgreements"
        ],
        "summary": "Get data processing agreement by id.",
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingAgreement"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "DataProcessingAgreements:Read"
            ]
          }
        ]
      },
      "put": {
        "tags": [
          "DataProcessingAgreements"
        ],
        "summary": "Update data processing agreement.",
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/UpdateDataProcessingAgreement"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataProcessingAgreement"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "DataProcessingAgreements:Write"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "DataProcessingAgreements"
        ],
        "summary": "Delete a data processing agreement this will not delete a published or a agreement in use with consents.",
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "DataProcessingAgreements:Write"
            ]
          }
        ]
      }
    },
    "/v1/data-agreements/{id}/terminate": {
      "put": {
        "tags": [
          "DataProcessingAgreements"
        ],
        "summary": "Terminate a data processing agreement by id.",
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "type": "boolean"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "DataProcessingAgreements:Write"
            ]
          }
        ]
      }
    },
    "/v1/data-providers": {
      "get": {
        "tags": [
          "DataProvidersDiscovery"
        ],
        "summary": "Discover all data providers in my data my consent by country and filters.",
        "parameters": [
          {
            "name": "country_iso2_code",
            "schema": {
              "type": "string"
            },
            "in": "query",
            "required": true,
            "deprecated": false
          },
          {
            "name": "page_no",
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          },
          {
            "name": "page_size",
            "schema": {
              "type": "integer",
              "format": "uint64"
            },
            "in": "query",
            "required": false,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PaginatedListOfDataProviders"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "DataProviders:Read"
            ]
          }
        ]
      }
    },
    "/v1/data-providers/{id}": {
      "get": {
        "tags": [
          "DataProvidersDiscovery"
        ],
        "summary": "Get a data provider details by provider id.",
        "parameters": [
          {
            "name": "id",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DataProviderDetails"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "DataProviders:Read"
            ]
          }
        ]
      }
    },
    "/issuer/issuedoc/1/xml": {
      "post": {
        "tags": [
          "Individuals"
        ],
        "summary": "Digilocker compatible endpoint to issue document.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/PushUriRequest"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/PushUriResponse"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": []
          }
        ]
      }
    },
    "/v1/supported-identifiers/{country_iso2_code}": {
      "get": {
        "tags": [
          "SupportedIdentifiers"
        ],
        "summary": "Get all supported identifiers by country.",
        "parameters": [
          {
            "name": "country_iso2_code",
            "schema": {
              "type": "string"
            },
            "in": "path",
            "required": true,
            "deprecated": false
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SupportedIdentifier"
                }
              }
            }
          },
          "400": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "403": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "404": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          },
          "500": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Error"
                }
              }
            }
          }
        },
        "security": [
          {
            "OAuth2ClientCredentials": [
              "SupportedIdentifiers:Read"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Aif": {
        "type": "object",
        "required": [
          "id",
          "name",
          "identifier",
          "amount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "AifTransaction": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "ApiErrorType": {
        "type": "string",
        "enum": [
          "Unauthorized",
          "TooManyRequests",
          "BadRequest",
          "NotFound",
          "InternalServerError",
          "DataConsentRequestExists"
        ]
      },
      "BillPayment": {
        "type": "object",
        "required": [
          "id",
          "name",
          "identifier",
          "amount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "BillPaymentTransaction": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "Bond": {
        "type": "object",
        "required": [
          "id",
          "name",
          "identifier",
          "amount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "BondTransaction": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "CIS": {
        "type": "object",
        "required": [
          "id",
          "name",
          "identifier",
          "amount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "CISTransaction": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "CertificateOfDeposit": {
        "type": "object",
        "required": [
          "id",
          "name",
          "identifier",
          "amount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "CertificateOfDepositTransaction": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "CollectibleTypes": {
        "type": "string",
        "enum": [
          "Identity",
          "Documents",
          "Financials",
          "Health"
        ]
      },
      "CommercialPaper": {
        "type": "object",
        "required": [
          "id",
          "name",
          "identifier",
          "amount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "CommercialPaperTransaction": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "Consent": {
        "type": "object",
        "description": "Consent : Consent details.",
        "required": [
          "id",
          "requestId",
          "title",
          "description",
          "status",
          "requestedAtUtc"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Consent id."
          },
          "requestId": {
            "type": "string",
            "description": "Consent request id."
          },
          "templateId": {
            "type": "string",
            "description": "Consent request template id."
          },
          "title": {
            "type": "string",
            "description": "Consent title."
          },
          "description": {
            "type": "string",
            "description": "Consent description."
          },
          "purpose": {
            "type": "string",
            "description": "Consent purpose."
          },
          "status": {
            "$ref": "#/components/schemas/DataConsentStatus"
          },
          "transactionId": {
            "type": "string",
            "description": "Transaction id."
          },
          "requestedAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Consent requested datetime in UTC timezone."
          },
          "approvedAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Consent approval datetime in UTC timezone."
          },
          "dataAccessExpiresAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Data access expiration datetime in UTC timezone."
          },
          "revokedAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Consent revocation datetime in UTC timezone."
          }
        }
      },
      "ConsentDetails": {
        "type": "object",
        "description": "ConsentDetails : Consent details.",
        "required": [
          "id",
          "requestId",
          "title",
          "description",
          "status",
          "approvedAtUtc",
          "dataAccessExpiresAtUtc",
          "collectables"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Consent id."
          },
          "requestId": {
            "type": "string",
            "description": "Consent request id."
          },
          "templateId": {
            "type": "string",
            "description": "Consent request template id."
          },
          "title": {
            "type": "string",
            "description": "Consent title."
          },
          "description": {
            "type": "string",
            "description": "Consent description."
          },
          "purpose": {
            "type": "string",
            "description": "Consent purpose."
          },
          "status": {
            "$ref": "#/components/schemas/DataConsentStatus"
          },
          "transactionId": {
            "type": "string",
            "description": "Transaction id."
          },
          "approvedAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Consent approval datetime in UTC timezone."
          },
          "dataAccessExpiresAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Data access expiration datetime in UTC timezone."
          },
          "revokedAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Consent revocation datetime in UTC timezone."
          },
          "collectables": {
            "type": "array",
            "description": "List of supported collectible types.",
            "items": {
              "$ref": "#/components/schemas/CollectibleTypes"
            }
          },
          "identifiers": {
            "type": "array",
            "description": "Consented identity details.",
            "items": {
              "$ref": "#/components/schemas/ConsentedIdentifier"
            }
          },
          "documents": {
            "type": "array",
            "description": "List of consented documents.",
            "items": {
              "$ref": "#/components/schemas/ConsentedDocument"
            }
          },
          "medicalRecords": {
            "type": "array",
            "description": "List of consented medical records.",
            "items": {
              "$ref": "#/components/schemas/ConsentedMedicalRecord"
            }
          },
          "financialAccounts": {
            "type": "array",
            "description": "List of consented financial accounts.",
            "items": {
              "$ref": "#/components/schemas/ConsentedFinancialAccount"
            }
          }
        }
      },
      "ConsentDocumentIssuer": {
        "type": "object",
        "description": "ConsentDocumentIssuer : Consent document issuer details.",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Document issuer id."
          },
          "name": {
            "type": "string",
            "description": "Document issuer name."
          }
        }
      },
      "ConsentRequest": {
        "type": "object",
        "description": "ConsentRequest :Consent request details.",
        "required": [
          "id",
          "title",
          "description",
          "collectables",
          "receiver",
          "status",
          "createdAtUtc",
          "expiresAtUtc"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Consent request id."
          },
          "templateId": {
            "type": "string",
            "description": "Consent request template id."
          },
          "consentId": {
            "type": "string",
            "description": "Consent id."
          },
          "title": {
            "type": "string",
            "description": "Consent title."
          },
          "description": {
            "type": "string",
            "description": "Consent description."
          },
          "purpose": {
            "type": "string",
            "description": "Consent purpose."
          },
          "dataLife": {
            "$ref": "#/components/schemas/Life"
          },
          "collectables": {
            "type": "array",
            "description": "List of supported collectables.",
            "items": {
              "$ref": "#/components/schemas/CollectibleTypes"
            }
          },
          "receiver": {
            "$ref": "#/components/schemas/ConsentRequestReceiver"
          },
          "status": {
            "$ref": "#/components/schemas/DataConsentStatus"
          },
          "createdAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Request creation datetime in UTC timezone."
          },
          "expiresAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Request expiration datetime in UTC timezone."
          },
          "approvedAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Request approval datetime in UTC timezone."
          },
          "dataAccessExpiresAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Data access expiration datetime in UTC timezone."
          },
          "rejectedAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Request rejection datetime in UTC timezone."
          },
          "revokedAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Request revocation datetime in UTC timezone."
          }
        }
      },
      "ConsentRequestApproved": {
        "type": "object",
        "description": "sent when consent request is approved by the user / organization users."
      },
      "ConsentRequestReceiver": {
        "type": "object",
        "required": [
          "countryIso2Code",
          "identifiers",
          "identificationStrategy"
        ],
        "properties": {
          "countryIso2Code": {
            "type": "string"
          },
          "identifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValuePair"
            }
          },
          "identificationStrategy": {
            "$ref": "#/components/schemas/IdentificationStrategy"
          }
        }
      },
      "ConsentRequestTemplate": {
        "type": "object",
        "description": "ConsentRequestTemplate : Consent request template.",
        "required": [
          "id",
          "title",
          "description",
          "shortId",
          "status",
          "createdBy",
          "createdAtUtc"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Consent request template id."
          },
          "title": {
            "type": "string",
            "description": "Consent request template title."
          },
          "description": {
            "type": "string",
            "description": "Consent request template description."
          },
          "purpose": {
            "type": "string",
            "description": "Consent request template purpose."
          },
          "shortId": {
            "type": "string",
            "description": "Consent request template short Id."
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ConsentRequestTemplateStatus"
              },
              {
                "description": "Consent request template status."
              }
            ]
          },
          "createdBy": {
            "type": "string",
            "description": "Consent request template created by user."
          },
          "createdAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Consent request template created datetime in UTC timezone."
          },
          "approvedAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Consent request template approval datetime in UTC timezone."
          },
          "rejectedAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Consent request template rejection datetime in UTC timezone."
          },
          "rejectionReason": {
            "type": "string",
            "description": "Consent request template rejection reason."
          }
        }
      },
      "ConsentRequestTemplateStatus": {
        "type": "string",
        "description": "Consent request template status.",
        "enum": [
          "CreationPending",
          "UnderReview",
          "Active",
          "Inactive",
          "Rejected"
        ]
      },
      "ConsentedDocument": {
        "type": "object",
        "description": "ConsentedDocument : Consented document details.",
        "required": [
          "id",
          "name",
          "category",
          "identifier",
          "fieldTitle",
          "fieldSlug",
          "issuedAtUtc",
          "issuer",
          "digitalSignatures"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Document id."
          },
          "name": {
            "type": "string",
            "description": "Document name."
          },
          "category": {
            "type": "string",
            "description": "Document category."
          },
          "identifier": {
            "type": "string",
            "description": "Document identifier."
          },
          "fieldTitle": {
            "type": "string",
            "description": "Document field title."
          },
          "fieldSlug": {
            "type": "string",
            "description": "Document field slug."
          },
          "issuedAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Document issued at datetime in UTC timezone."
          },
          "expiresAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Document expires at datetime in UTC timezone."
          },
          "issuer": {
            "$ref": "#/components/schemas/ConsentDocumentIssuer"
          },
          "digitalSignatures": {
            "type": "array",
            "description": "Digital signatures.",
            "items": {
              "$ref": "#/components/schemas/DocumentDigitalSignature"
            }
          }
        }
      },
      "ConsentedFinancialAccount": {
        "type": "object",
        "description": "ConsentedFinancialAccount : Consented financial account details.",
        "required": [
          "id",
          "name",
          "category",
          "subCategory",
          "identifier",
          "fieldTitle",
          "fieldSlug",
          "requestedDetails",
          "issuerId",
          "issuerName"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Financial account id."
          },
          "name": {
            "type": "string",
            "description": "Financial account name."
          },
          "category": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinancialAccountCategoryType"
              },
              {
                "description": "Financial account category."
              }
            ]
          },
          "subCategory": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinancialAccountSubCategoryType"
              },
              {
                "description": "Financial account sub category."
              }
            ]
          },
          "identifier": {
            "type": "string",
            "description": "Financial account identifier."
          },
          "fieldTitle": {
            "type": "string",
            "description": "Financial account field title."
          },
          "fieldSlug": {
            "type": "string",
            "description": "Financial account field slug."
          },
          "requestedDetails": {
            "type": "array",
            "description": "Requested financial account details.",
            "items": {
              "$ref": "#/components/schemas/FinancialAccountDetailsRequired"
            }
          },
          "transactionPeriod": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinancialAccountTransactionPeriod"
              },
              {
                "description": "Financial account transaction period."
              }
            ]
          },
          "issuerId": {
            "type": "string",
            "description": "Financial account issuer id."
          },
          "issuerName": {
            "type": "string",
            "description": "Financial account issuer name."
          }
        }
      },
      "ConsentedIdentifier": {
        "type": "object",
        "description": "ConsentedIdentifier : Consented identifier details.",
        "required": [
          "name",
          "key",
          "valueType",
          "value"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Identifier name."
          },
          "key": {
            "type": "string",
            "description": "Identifier key."
          },
          "valueType": {
            "type": "string",
            "description": "Identifier value type."
          },
          "value": {
            "type": "string",
            "description": "Identifier value."
          }
        }
      },
      "ConsentedMedicalRecord": {
        "type": "object",
        "description": "ConsentedMedicalRecord : Consented medical record details.",
        "required": [
          "fieldTitle",
          "fieldSlug",
          "category"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Health id."
          },
          "fieldTitle": {
            "type": "string",
            "description": "Health field title."
          },
          "fieldSlug": {
            "type": "string",
            "description": "Health field slug."
          },
          "category": {
            "type": "string",
            "description": "health category type."
          },
          "toDate": {
            "type": "string",
            "format": "date-time",
            "description": "To Date"
          },
          "fromDate": {
            "type": "string",
            "format": "date-time",
            "description": "From Date"
          }
        }
      },
      "CreateConsentRequest": {
        "type": "object",
        "description": "CreateConsentRequest : Create consent request.",
        "required": [
          "consentTemplateId",
          "receiver"
        ],
        "properties": {
          "consentTemplateId": {
            "type": "string",
            "description": "Consent request template id"
          },
          "receiver": {
            "$ref": "#/components/schemas/ConsentRequestReceiver"
          }
        }
      },
      "CreateDataProcessingAgreement": {
        "type": "object",
        "description": "CreateDataProcessingAgreement : Create data processing agreement details.",
        "required": [
          "version",
          "body",
          "attachmentUrl"
        ],
        "properties": {
          "version": {
            "type": "string",
            "description": "Agreement version."
          },
          "body": {
            "type": "string",
            "description": "Agreement body content."
          },
          "attachmentUrl": {
            "type": "string",
            "description": "Agreement attachment file URL."
          }
        }
      },
      "CreditCard": {
        "type": "object",
        "required": [
          "id",
          "name",
          "identifier",
          "balance",
          "profile",
          "summary",
          "masked_account_number",
          "linked_account_ref",
          "version"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "balance": {
            "type": "number",
            "format": "double"
          },
          "profile": {
            "$ref": "#/components/schemas/CreditCardProfile"
          },
          "summary": {
            "$ref": "#/components/schemas/CreditCardSummary"
          },
          "masked_account_number": {
            "type": "string"
          },
          "linked_account_ref": {
            "type": "string"
          },
          "version": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "CreditCardHolder": {
        "type": "object",
        "required": [
          "id",
          "creditCardId",
          "name",
          "dob",
          "mobile",
          "nominee",
          "address",
          "email",
          "pan",
          "ckycCompliance"
        ],
        "properties": {
          "id": {
            "type": "string",
            "format": "uuid"
          },
          "creditCardId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string"
          },
          "dob": {
            "type": "string",
            "format": "date-time"
          },
          "mobile": {
            "type": "string"
          },
          "nominee": {
            "$ref": "#/components/schemas/HoldingNominee"
          },
          "landline": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "pan": {
            "type": "string"
          },
          "ckycCompliance": {
            "type": "boolean"
          }
        }
      },
      "CreditCardHolders": {
        "type": "object",
        "required": [
          "holder"
        ],
        "properties": {
          "holder": {
            "$ref": "#/components/schemas/CreditCardHolder"
          }
        }
      },
      "CreditCardProfile": {
        "type": "object",
        "required": [
          "holders"
        ],
        "properties": {
          "holders": {
            "$ref": "#/components/schemas/CreditCardHolders"
          }
        }
      },
      "CreditCardSummary": {
        "type": "object",
        "required": [
          "creditCardId",
          "currentDue",
          "lastStatementDate",
          "dueDate",
          "previousDueAmount",
          "totalDueAmount",
          "minDueAmount",
          "creditLimit",
          "cashLimit",
          "availableCredit",
          "loyaltyPoints",
          "financeCharges"
        ],
        "properties": {
          "creditCardId": {
            "type": "string",
            "format": "uuid"
          },
          "currentDue": {
            "type": "number",
            "format": "double"
          },
          "lastStatementDate": {
            "type": "string",
            "format": "date-time"
          },
          "dueDate": {
            "type": "string",
            "format": "date-time"
          },
          "previousDueAmount": {
            "type": "number",
            "format": "double"
          },
          "totalDueAmount": {
            "type": "number",
            "format": "double"
          },
          "minDueAmount": {
            "type": "number",
            "format": "double"
          },
          "creditLimit": {
            "type": "number",
            "format": "double"
          },
          "cashLimit": {
            "type": "number",
            "format": "double"
          },
          "availableCredit": {
            "type": "number",
            "format": "double"
          },
          "loyaltyPoints": {
            "type": "string"
          },
          "financeCharges": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "CreditCardTransaction": {
        "type": "object",
        "required": [
          "id",
          "txn_type",
          "txn_date",
          "amount",
          "value_date",
          "narration",
          "statement_date",
          "mcc",
          "masked_card_number"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "txn_type": {
            "$ref": "#/components/schemas/CreditCardTransactionType"
          },
          "txn_date": {
            "type": "string",
            "format": "date-time"
          },
          "amount": {
            "type": "number",
            "format": "float"
          },
          "value_date": {
            "type": "string",
            "format": "date-time"
          },
          "narration": {
            "type": "string"
          },
          "statement_date": {
            "type": "string",
            "format": "date-time"
          },
          "mcc": {
            "type": "string"
          },
          "masked_card_number": {
            "type": "string"
          }
        }
      },
      "CreditCardTransactionType": {
        "type": "string",
        "enum": [
          "Debit",
          "Credit"
        ]
      },
      "DataConsentStatus": {
        "type": "string",
        "enum": [
          "Pending",
          "Approved",
          "Rejected",
          "Revoked",
          "Expired",
          "Timeout",
          "Canceled"
        ]
      },
      "DataProcessingAgreement": {
        "type": "object",
        "description": "DataProcessingAgreement : Data processing agreement details.",
        "required": [
          "id",
          "version",
          "body",
          "attachmentUrl"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Agreement id."
          },
          "version": {
            "type": "string",
            "description": "Agreement version."
          },
          "body": {
            "type": "string",
            "description": "Agreement body content."
          },
          "attachmentUrl": {
            "type": "string",
            "description": "Agreement attachment file URL."
          }
        }
      },
      "DataProtectionOfficer": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "phoneNumber": {
            "type": "string"
          },
          "website": {
            "type": "string"
          }
        }
      },
      "DataProvider": {
        "type": "object",
        "required": [
          "id",
          "name",
          "category",
          "dataProtectionOfficer"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "logoUrl": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "supportEmail": {
            "type": "string"
          },
          "helpLineNumber": {
            "type": "string"
          },
          "privacyPolicy": {
            "type": "string"
          },
          "termOfService": {
            "type": "string"
          },
          "dataProtectionOfficer": {
            "$ref": "#/components/schemas/DataProtectionOfficer"
          }
        }
      },
      "DataProviderDetails": {
        "type": "object",
        "description": "DataProviderDetails: Data provider details.",
        "required": [
          "id",
          "name",
          "category",
          "dataProtectionOfficer",
          "supportedDocumentTypes",
          "supportedAccountTypes"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "category": {
            "type": "string"
          },
          "logoUrl": {
            "type": "string"
          },
          "website": {
            "type": "string"
          },
          "supportEmail": {
            "type": "string"
          },
          "helpLineNumber": {
            "type": "string"
          },
          "privacyPolicy": {
            "type": "string"
          },
          "termOfService": {
            "type": "string"
          },
          "dataProtectionOfficer": {
            "$ref": "#/components/schemas/DataProtectionOfficer"
          },
          "supportedDocumentTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/SupportedDocumentType"
            }
          },
          "supportedAccountTypes": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Debenture": {
        "type": "object",
        "required": [
          "id",
          "name",
          "identifier",
          "amount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "DebentureTransaction": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "Deposit": {
        "type": "object",
        "required": [
          "id",
          "name",
          "identifier",
          "amount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "DepositTransaction": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "DocumentCategoryType": {
        "type": "string",
        "enum": [
          "Personal",
          "Education",
          "Health",
          "Finance",
          "Professional",
          "Licenses",
          "Certificates",
          "Legal",
          "Others"
        ]
      },
      "DocumentDigitalSignature": {
        "type": "object",
        "description": "DocumentDigitalSignature : Document digital signature.",
        "required": [
          "name",
          "issued_by",
          "issuer_name",
          "valid_from_utc",
          "valid_to_utc"
        ],
        "properties": {
          "name": {
            "type": "string",
            "description": "Name."
          },
          "issued_by": {
            "type": "string",
            "description": "Signature issued by."
          },
          "issuer_name": {
            "type": "string",
            "description": "Signature issuer name."
          },
          "valid_from_utc": {
            "type": "string",
            "description": "Signature valid from datatime in UTC timezone."
          },
          "valid_to_utc": {
            "type": "string",
            "description": "Signature valid to datatime in UTC timezone."
          }
        }
      },
      "DocumentField": {
        "type": "object",
        "description": "DocumentField : Document field of consent request template.",
        "required": [
          "fieldTitle",
          "fieldSlug",
          "drns"
        ],
        "properties": {
          "fieldTitle": {
            "type": "string",
            "description": "Field title."
          },
          "fieldSlug": {
            "type": "string",
            "description": "Field slug."
          },
          "drns": {
            "type": "array",
            "description": "Field DRNs.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "DocumentIssueRequest": {
        "type": "object",
        "description": "DocumentIssueRequest : Document Issue Request.",
        "required": [
          "documentTypeId",
          "identifier",
          "description",
          "receiver",
          "issuedAtUtc",
          "validFromUtc"
        ],
        "properties": {
          "documentTypeId": {
            "type": "string",
            "description": "Document type id."
          },
          "identifier": {
            "type": "string",
            "description": "Document identifier."
          },
          "description": {
            "type": "string",
            "description": "Document description."
          },
          "receiver": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DocumentReceiver"
              },
              {
                "description": "Document receiver."
              }
            ]
          },
          "paymentRequest": {
            "allOf": [
              {
                "$ref": "#/components/schemas/PaymentRequest"
              },
              {
                "description": "Document receiver."
              }
            ]
          },
          "issuedAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Datetime of issue in UTC timezone."
          },
          "validFromUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Valid from datetime in UTC timezone."
          },
          "expiresAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Datetime of expiry in UTC timezone."
          },
          "metadata": {
            "type": "object",
            "description": "Metadata.",
            "additionalProperties": {
              "type": "string"
            }
          }
        }
      },
      "DocumentIssueRequestDetails": {
        "type": "object",
        "description": "DocumentIssueRequestDetails : Document issue request details.",
        "required": [
          "id",
          "documentTypeId",
          "typeName",
          "identifier",
          "status",
          "description",
          "receiver",
          "issuedAtUtc",
          "validFromUtc",
          "createdAtUtc"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Document issue request Id."
          },
          "documentTypeId": {
            "type": "string",
            "description": "Document type Id."
          },
          "typeName": {
            "type": "string",
            "description": "Document type name."
          },
          "identifier": {
            "type": "string",
            "description": "Document identifier."
          },
          "status": {
            "$ref": "#/components/schemas/DocumentIssueRequestStatus"
          },
          "description": {
            "type": "string",
            "description": "Document description."
          },
          "receiver": {
            "allOf": [
              {
                "$ref": "#/components/schemas/DocumentReceiver"
              },
              {
                "description": "Document receiver details."
              }
            ]
          },
          "paymentRequest": {
            "$ref": "#/components/schemas/PaymentRequest"
          },
          "issuedAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Datetime of issue in UTC timezone."
          },
          "validFromUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Valid from datetime in UTC timezone."
          },
          "expiresAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Datetime of expiry in UTC timezone."
          },
          "metaData": {
            "description": "Metadata."
          },
          "createdAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Creation datetime of issue request in UTC timezone."
          }
        }
      },
      "DocumentIssueRequestStatus": {
        "type": "string",
        "description": "Document issue request status.",
        "enum": [
          "Created",
          "Issued",
          "Accepted",
          "Rejected"
        ]
      },
      "DocumentReceiver": {
        "type": "object",
        "required": [
          "countryIso2Code",
          "identifiers",
          "identificationStrategy"
        ],
        "properties": {
          "countryIso2Code": {
            "type": "string"
          },
          "identifiers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeyValuePair"
            }
          },
          "identificationStrategy": {
            "$ref": "#/components/schemas/IdentificationStrategy"
          }
        }
      },
      "DocumentSubCategoryType": {
        "type": "string",
        "enum": [
          "Identity",
          "Property",
          "Vehicle",
          "AdmitAndIdCards",
          "Marksheets",
          "Transcripts",
          "Certificates",
          "Prescriptions",
          "MedicalReports",
          "DischargeSummary",
          "AccountAndCertificates",
          "BillsAndInvoices",
          "Insurance",
          "ReceiptsAndSubscriptions",
          "Taxes",
          "Corporates",
          "Competitions",
          "IntellectualProperties",
          "Others",
          "ApplicationsAndCertificates",
          "Licenses",
          "OrganizationIds",
          "Permits",
          "Legal"
        ]
      },
      "DocumentType": {
        "type": "object",
        "description": "DocumentType : Issuable Document Type details.",
        "required": [
          "id",
          "categoryType",
          "subCategoryType",
          "name",
          "slug",
          "logoUrl",
          "supportedEntityType",
          "addedBy",
          "payableAmount",
          "payableAmountCurrency"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Document Type Identifier."
          },
          "categoryType": {
            "$ref": "#/components/schemas/DocumentCategoryType"
          },
          "subCategoryType": {
            "$ref": "#/components/schemas/DocumentSubCategoryType"
          },
          "name": {
            "type": "string",
            "description": "Document Type Name. eg: Driving License."
          },
          "slug": {
            "type": "string",
            "description": "Document Type Unique Slug. eg: \\\"in.gov.gj.transport.dl\\\"."
          },
          "description": {
            "type": "string",
            "description": "Document Type description. eg: Gujarat State Driving License."
          },
          "logoUrl": {
            "type": "string",
            "description": "Logo URL of document type."
          },
          "searchServiceName": {
            "type": "string",
            "description": "Document search repository service name."
          },
          "repositoryServiceName": {
            "type": "string",
            "description": "Document repository service name."
          },
          "supportedEntityType": {
            "allOf": [
              {
                "$ref": "#/components/schemas/SupportedEntityType"
              },
              {
                "description": "Supported entity types. eg: Individual, Organization."
              }
            ]
          },
          "addedBy": {
            "type": "string",
            "description": "Name of the document type creator."
          },
          "payableAmount": {
            "type": "string",
            "format": "decimal",
            "description": "Payable amount if document is chargeable. eg: 10.25."
          },
          "payableAmountCurrency": {
            "type": "string",
            "description": "Payable amount currency. eg: INR, USD etc.,."
          },
          "approvedAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "DateTime of approval in UTC timezone."
          }
        }
      },
      "Epf": {
        "type": "object",
        "required": [
          "id",
          "name",
          "identifier",
          "amount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "EpfTransaction": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "Equity": {
        "type": "object",
        "required": [
          "id",
          "name",
          "identifier",
          "balance",
          "profile",
          "summary",
          "masked_account_number",
          "linked_account_ref",
          "version"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "balance": {
            "type": "number",
            "format": "double"
          },
          "profile": {
            "$ref": "#/components/schemas/Profile"
          },
          "summary": {
            "$ref": "#/components/schemas/EquitySummary"
          },
          "masked_account_number": {
            "type": "string"
          },
          "linked_account_ref": {
            "type": "string"
          },
          "version": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "EquityHolding": {
        "type": "object",
        "required": [
          "issuerName",
          "exchange",
          "isin",
          "units"
        ],
        "properties": {
          "issuerName": {
            "type": "string"
          },
          "exchange": {
            "type": "string"
          },
          "isin": {
            "type": "string"
          },
          "units": {
            "type": "integer",
            "format": "int64"
          },
          "investmentDateTime": {
            "type": "string",
            "format": "date-time"
          },
          "rate": {
            "type": "string"
          },
          "lastTradedPrice": {
            "type": "string"
          },
          "description": {
            "type": "string"
          }
        }
      },
      "EquityHoldingMode": {
        "type": "string",
        "enum": [
          "Demat",
          "Physical"
        ]
      },
      "EquityHoldings": {
        "type": "object",
        "required": [
          "holding",
          "type"
        ],
        "properties": {
          "holding": {
            "$ref": "#/components/schemas/EquityHolding"
          },
          "type": {
            "$ref": "#/components/schemas/EquityHoldingMode"
          }
        }
      },
      "EquityInvestment": {
        "type": "object",
        "required": [
          "holdings"
        ],
        "properties": {
          "holdings": {
            "$ref": "#/components/schemas/EquityHoldings"
          }
        }
      },
      "EquitySummary": {
        "type": "object",
        "required": [
          "investment",
          "investmentValue",
          "currentValue"
        ],
        "properties": {
          "investment": {
            "$ref": "#/components/schemas/EquityInvestment"
          },
          "investmentValue": {
            "type": "number",
            "format": "double"
          },
          "currentValue": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "EquityTransaction": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "Error": {
        "type": "object",
        "required": [
          "title",
          "status",
          "error_type"
        ],
        "properties": {
          "title": {
            "type": "string"
          },
          "status": {
            "type": "integer",
            "format": "uint16"
          },
          "error_type": {
            "$ref": "#/components/schemas/ApiErrorType"
          }
        }
      },
      "Etf": {
        "type": "object",
        "required": [
          "id",
          "name",
          "identifier",
          "amount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "EtfTransaction": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "FinancialAccount": {
        "type": "object",
        "anyOf": [
          {
            "$ref": "#/components/schemas/FinancialAccountCreditCard"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountMutualFund"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountEquity"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountBillPayment"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountAif"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountBond"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountCertificateOfDeposit"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountCIS"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountCommercialPaper"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountDebenture"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountDeposit"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountEpf"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountEtf"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountGovtSecurity"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountIdr"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountInsurancePolicy"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountInvit"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountLoan"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountNps"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountPpf"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountRecurringDeposit"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountReit"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountSip"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountTermDeposit"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountUlip"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "CreditCard": "#/components/schemas/FinancialAccountCreditCard",
            "MutualFund": "#/components/schemas/FinancialAccountMutualFund",
            "Equity": "#/components/schemas/FinancialAccountEquity",
            "BillPayment": "#/components/schemas/FinancialAccountBillPayment",
            "Aif": "#/components/schemas/FinancialAccountAif",
            "Bond": "#/components/schemas/FinancialAccountBond",
            "CertificateOfDeposit": "#/components/schemas/FinancialAccountCertificateOfDeposit",
            "CIS": "#/components/schemas/FinancialAccountCIS",
            "CommercialPaper": "#/components/schemas/FinancialAccountCommercialPaper",
            "Debenture": "#/components/schemas/FinancialAccountDebenture",
            "Deposit": "#/components/schemas/FinancialAccountDeposit",
            "Epf": "#/components/schemas/FinancialAccountEpf",
            "Etf": "#/components/schemas/FinancialAccountEtf",
            "GovtSecurity": "#/components/schemas/FinancialAccountGovtSecurity",
            "Idr": "#/components/schemas/FinancialAccountIdr",
            "InsurancePolicy": "#/components/schemas/FinancialAccountInsurancePolicy",
            "Invit": "#/components/schemas/FinancialAccountInvit",
            "Loan": "#/components/schemas/FinancialAccountLoan",
            "Nps": "#/components/schemas/FinancialAccountNps",
            "Ppf": "#/components/schemas/FinancialAccountPpf",
            "RecurringDeposit": "#/components/schemas/FinancialAccountRecurringDeposit",
            "Reit": "#/components/schemas/FinancialAccountReit",
            "Sip": "#/components/schemas/FinancialAccountSip",
            "TermDeposit": "#/components/schemas/FinancialAccountTermDeposit",
            "Ulip": "#/components/schemas/FinancialAccountUlip"
          }
        }
      },
      "FinancialAccountCategoryType": {
        "type": "string",
        "enum": [
          "Savings",
          "Insurance",
          "Loan",
          "CreditCard",
          "Bill",
          "Investment",
          "Reward"
        ]
      },
      "FinancialAccountDetailsRequired": {
        "type": "string",
        "enum": [
          "AccountSummary",
          "TransactionDetails"
        ]
      },
      "FinancialAccountField": {
        "type": "object",
        "description": "FinancialAccountField : Financial account field of consent request template.",
        "required": [
          "fieldTitle",
          "fieldSlug",
          "accountTypes"
        ],
        "properties": {
          "fieldTitle": {
            "type": "string",
            "description": "Field title."
          },
          "fieldSlug": {
            "type": "string",
            "description": "Field slug."
          },
          "accountTypes": {
            "type": "array",
            "description": "Selected financial account types.",
            "items": {
              "$ref": "#/components/schemas/SelectedFinancialAccountType"
            }
          }
        }
      },
      "FinancialAccountSubCategoryType": {
        "type": "string",
        "enum": [
          "Epf",
          "Ppf",
          "Deposit",
          "RecurringDeposit",
          "TermDeposit",
          "SavingsAccount",
          "Ulip",
          "LifeInsurance",
          "TermInsurance",
          "GeneralInsurance",
          "HomeLoan",
          "StudentLoan",
          "SecuredCreditCard",
          "UnsecuredCreditCard",
          "Aif",
          "Bond",
          "Cd",
          "Cis",
          "Cp",
          "Debenture",
          "Equity",
          "Etf",
          "GovtSecurity",
          "Idr",
          "Invit",
          "MutualFund",
          "Nps",
          "Reit",
          "Sip",
          "Bill",
          "Reward"
        ]
      },
      "FinancialAccountTransaction": {
        "type": "object",
        "anyOf": [
          {
            "$ref": "#/components/schemas/FinancialAccountCreditCardTransaction"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountMutualFundTransaction"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountEquityTransaction"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountBillPaymentTransaction"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountAifTransaction"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountBondTransaction"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountCertificateOfDepositTransaction"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountCISTransaction"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountCommercialPaperTransaction"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountDebentureTransaction"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountDepositTransaction"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountEpfTransaction"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountEtfTransaction"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountGovtSecurityTransaction"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountIdrTransaction"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountInsurancePolicyTransaction"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountInvitTransaction"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountLoanTransaction"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountNpsTransaction"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountPpfTransaction"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountRecurringDepositTransaction"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountReitTransaction"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountSipTransaction"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountTermDepositTransaction"
          },
          {
            "$ref": "#/components/schemas/FinancialAccountUlipTransaction"
          }
        ],
        "discriminator": {
          "propertyName": "type",
          "mapping": {
            "CreditCardTransaction": "#/components/schemas/FinancialAccountCreditCardTransaction",
            "MutualFundTransaction": "#/components/schemas/FinancialAccountMutualFundTransaction",
            "EquityTransaction": "#/components/schemas/FinancialAccountEquityTransaction",
            "BillPaymentTransaction": "#/components/schemas/FinancialAccountBillPaymentTransaction",
            "AifTransaction": "#/components/schemas/FinancialAccountAifTransaction",
            "BondTransaction": "#/components/schemas/FinancialAccountBondTransaction",
            "CertificateOfDepositTransaction": "#/components/schemas/FinancialAccountCertificateOfDepositTransaction",
            "CISTransaction": "#/components/schemas/FinancialAccountCISTransaction",
            "CommercialPaperTransaction": "#/components/schemas/FinancialAccountCommercialPaperTransaction",
            "DebentureTransaction": "#/components/schemas/FinancialAccountDebentureTransaction",
            "DepositTransaction": "#/components/schemas/FinancialAccountDepositTransaction",
            "EpfTransaction": "#/components/schemas/FinancialAccountEpfTransaction",
            "EtfTransaction": "#/components/schemas/FinancialAccountEtfTransaction",
            "GovtSecurityTransaction": "#/components/schemas/FinancialAccountGovtSecurityTransaction",
            "IdrTransaction": "#/components/schemas/FinancialAccountIdrTransaction",
            "InsurancePolicyTransaction": "#/components/schemas/FinancialAccountInsurancePolicyTransaction",
            "InvitTransaction": "#/components/schemas/FinancialAccountInvitTransaction",
            "LoanTransaction": "#/components/schemas/FinancialAccountLoanTransaction",
            "NpsTransaction": "#/components/schemas/FinancialAccountNpsTransaction",
            "PpfTransaction": "#/components/schemas/FinancialAccountPpfTransaction",
            "RecurringDepositTransaction": "#/components/schemas/FinancialAccountRecurringDepositTransaction",
            "ReitTransaction": "#/components/schemas/FinancialAccountReitTransaction",
            "SipTransaction": "#/components/schemas/FinancialAccountSipTransaction",
            "TermDepositTransaction": "#/components/schemas/FinancialAccountTermDepositTransaction",
            "UlipTransaction": "#/components/schemas/FinancialAccountUlipTransaction"
          }
        }
      },
      "FinancialAccountTransactionPeriod": {
        "type": "object",
        "description": "FinancialAccountTransactionPeriod : Financial account transaction period.",
        "required": [
          "from",
          "to"
        ],
        "properties": {
          "from": {
            "type": "string",
            "format": "date-time"
          },
          "to": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "FinancialAccountAifTransaction": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "AifTransaction"
              }
            }
          },
          {
            "$ref": "#/components/schemas/AifTransaction"
          }
        ]
      },
      "FinancialAccountBillPaymentTransaction": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "BillPaymentTransaction"
              }
            }
          },
          {
            "$ref": "#/components/schemas/BillPaymentTransaction"
          }
        ]
      },
      "FinancialAccountBondTransaction": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "BondTransaction"
              }
            }
          },
          {
            "$ref": "#/components/schemas/BondTransaction"
          }
        ]
      },
      "FinancialAccountCISTransaction": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "CISTransaction"
              }
            }
          },
          {
            "$ref": "#/components/schemas/CISTransaction"
          }
        ]
      },
      "FinancialAccountCertificateOfDepositTransaction": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "CertificateOfDepositTransaction"
              }
            }
          },
          {
            "$ref": "#/components/schemas/CertificateOfDepositTransaction"
          }
        ]
      },
      "FinancialAccountCommercialPaperTransaction": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "CommercialPaperTransaction"
              }
            }
          },
          {
            "$ref": "#/components/schemas/CommercialPaperTransaction"
          }
        ]
      },
      "FinancialAccountCreditCardTransaction": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "CreditCardTransaction"
              }
            }
          },
          {
            "$ref": "#/components/schemas/CreditCardTransaction"
          }
        ]
      },
      "FinancialAccountDebentureTransaction": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "DebentureTransaction"
              }
            }
          },
          {
            "$ref": "#/components/schemas/DebentureTransaction"
          }
        ]
      },
      "FinancialAccountDepositTransaction": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "DepositTransaction"
              }
            }
          },
          {
            "$ref": "#/components/schemas/DepositTransaction"
          }
        ]
      },
      "FinancialAccountEpfTransaction": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "EpfTransaction"
              }
            }
          },
          {
            "$ref": "#/components/schemas/EpfTransaction"
          }
        ]
      },
      "FinancialAccountEquityTransaction": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "EquityTransaction"
              }
            }
          },
          {
            "$ref": "#/components/schemas/EquityTransaction"
          }
        ]
      },
      "FinancialAccountEtfTransaction": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "EtfTransaction"
              }
            }
          },
          {
            "$ref": "#/components/schemas/EtfTransaction"
          }
        ]
      },
      "FinancialAccountGovtSecurityTransaction": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "GovtSecurityTransaction"
              }
            }
          },
          {
            "$ref": "#/components/schemas/GovtSecurityTransaction"
          }
        ]
      },
      "FinancialAccountIdrTransaction": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "IdrTransaction"
              }
            }
          },
          {
            "$ref": "#/components/schemas/IdrTransaction"
          }
        ]
      },
      "FinancialAccountInsurancePolicyTransaction": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "InsurancePolicyTransaction"
              }
            }
          },
          {
            "$ref": "#/components/schemas/InsurancePolicyTransaction"
          }
        ]
      },
      "FinancialAccountInvitTransaction": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "InvitTransaction"
              }
            }
          },
          {
            "$ref": "#/components/schemas/InvitTransaction"
          }
        ]
      },
      "FinancialAccountLoanTransaction": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "LoanTransaction"
              }
            }
          },
          {
            "$ref": "#/components/schemas/LoanTransaction"
          }
        ]
      },
      "FinancialAccountMutualFundTransaction": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "MutualFundTransaction"
              }
            }
          },
          {
            "$ref": "#/components/schemas/MutualFundTransaction"
          }
        ]
      },
      "FinancialAccountNpsTransaction": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "NpsTransaction"
              }
            }
          },
          {
            "$ref": "#/components/schemas/NpsTransaction"
          }
        ]
      },
      "FinancialAccountPpfTransaction": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "PpfTransaction"
              }
            }
          },
          {
            "$ref": "#/components/schemas/PpfTransaction"
          }
        ]
      },
      "FinancialAccountRecurringDepositTransaction": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "RecurringDepositTransaction"
              }
            }
          },
          {
            "$ref": "#/components/schemas/RecurringDepositTransaction"
          }
        ]
      },
      "FinancialAccountReitTransaction": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "ReitTransaction"
              }
            }
          },
          {
            "$ref": "#/components/schemas/ReitTransaction"
          }
        ]
      },
      "FinancialAccountSipTransaction": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "SipTransaction"
              }
            }
          },
          {
            "$ref": "#/components/schemas/SipTransaction"
          }
        ]
      },
      "FinancialAccountTermDepositTransaction": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "TermDepositTransaction"
              }
            }
          },
          {
            "$ref": "#/components/schemas/TermDepositTransaction"
          }
        ]
      },
      "FinancialAccountUlipTransaction": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "UlipTransaction"
              }
            }
          },
          {
            "$ref": "#/components/schemas/UlipTransaction"
          }
        ]
      },
      "FinancialAccountAif": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "Aif"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Aif"
          }
        ]
      },
      "FinancialAccountBillPayment": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "BillPayment"
              }
            }
          },
          {
            "$ref": "#/components/schemas/BillPayment"
          }
        ]
      },
      "FinancialAccountBond": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "Bond"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Bond"
          }
        ]
      },
      "FinancialAccountCIS": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "CIS"
              }
            }
          },
          {
            "$ref": "#/components/schemas/CIS"
          }
        ]
      },
      "FinancialAccountCertificateOfDeposit": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "CertificateOfDeposit"
              }
            }
          },
          {
            "$ref": "#/components/schemas/CertificateOfDeposit"
          }
        ]
      },
      "FinancialAccountCommercialPaper": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "CommercialPaper"
              }
            }
          },
          {
            "$ref": "#/components/schemas/CommercialPaper"
          }
        ]
      },
      "FinancialAccountCreditCard": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "CreditCard"
              }
            }
          },
          {
            "$ref": "#/components/schemas/CreditCard"
          }
        ]
      },
      "FinancialAccountDebenture": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "Debenture"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Debenture"
          }
        ]
      },
      "FinancialAccountDeposit": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "Deposit"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Deposit"
          }
        ]
      },
      "FinancialAccountEpf": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "Epf"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Epf"
          }
        ]
      },
      "FinancialAccountEquity": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "Equity"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Equity"
          }
        ]
      },
      "FinancialAccountEtf": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "Etf"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Etf"
          }
        ]
      },
      "FinancialAccountGovtSecurity": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "GovtSecurity"
              }
            }
          },
          {
            "$ref": "#/components/schemas/GovtSecurity"
          }
        ]
      },
      "FinancialAccountIdr": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "Idr"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Idr"
          }
        ]
      },
      "FinancialAccountInsurancePolicy": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "InsurancePolicy"
              }
            }
          },
          {
            "$ref": "#/components/schemas/InsurancePolicy"
          }
        ]
      },
      "FinancialAccountInvit": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "Invit"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Invit"
          }
        ]
      },
      "FinancialAccountLoan": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "Loan"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Loan"
          }
        ]
      },
      "FinancialAccountMutualFund": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "MutualFund"
              }
            }
          },
          {
            "$ref": "#/components/schemas/MutualFund"
          }
        ]
      },
      "FinancialAccountNps": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "Nps"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Nps"
          }
        ]
      },
      "FinancialAccountPpf": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "Ppf"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Ppf"
          }
        ]
      },
      "FinancialAccountRecurringDeposit": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "RecurringDeposit"
              }
            }
          },
          {
            "$ref": "#/components/schemas/RecurringDeposit"
          }
        ]
      },
      "FinancialAccountReit": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "Reit"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Reit"
          }
        ]
      },
      "FinancialAccountSip": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "Sip"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Sip"
          }
        ]
      },
      "FinancialAccountTermDeposit": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "TermDeposit"
              }
            }
          },
          {
            "$ref": "#/components/schemas/TermDeposit"
          }
        ]
      },
      "FinancialAccountUlip": {
        "allOf": [
          {
            "type": "object",
            "required": [
              "type"
            ],
            "properties": {
              "type": {
                "type": "string",
                "example": "Ulip"
              }
            }
          },
          {
            "$ref": "#/components/schemas/Ulip"
          }
        ]
      },
      "GovtSecurity": {
        "type": "object",
        "required": [
          "id",
          "name",
          "identifier",
          "amount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "GovtSecurityTransaction": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "Holder": {
        "type": "object",
        "required": [
          "name",
          "dematId",
          "email",
          "ckycCompliance"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "dob": {
            "type": "string",
            "format": "date-time"
          },
          "mobile": {
            "type": "string"
          },
          "nominee": {
            "$ref": "#/components/schemas/HoldingNominee"
          },
          "dematId": {
            "type": "string"
          },
          "landline": {
            "type": "string"
          },
          "address": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "pan": {
            "type": "string"
          },
          "ckycCompliance": {
            "type": "boolean"
          }
        }
      },
      "Holders": {
        "type": "object",
        "required": [
          "holder",
          "type"
        ],
        "properties": {
          "holder": {
            "$ref": "#/components/schemas/Holder"
          },
          "type": {
            "$ref": "#/components/schemas/HoldersType"
          }
        }
      },
      "HoldersType": {
        "type": "string",
        "enum": [
          "Single",
          "Joint"
        ]
      },
      "HoldingNominee": {
        "type": "string",
        "enum": [
          "Registered",
          "NotRegistered"
        ]
      },
      "IdentificationStrategy": {
        "type": "string",
        "enum": [
          "MatchAtLeastOneIdentifier",
          "MatchAnyTwoIdentifiers",
          "MatchAllIdentifiers"
        ]
      },
      "Identifier": {
        "type": "object",
        "description": "Identifier details.",
        "required": [
          "key",
          "name",
          "description",
          "example_value"
        ],
        "properties": {
          "key": {
            "type": "string",
            "description": "Identifier key.\nEMAIL, MOBILE_NUMBER, etc."
          },
          "name": {
            "type": "string",
            "description": "Identifier name.\nEmail, Mobile Number, etc."
          },
          "description": {
            "type": "string",
            "description": "Identifier description.\nUser's email, User's mobile number, etc."
          },
          "example_value": {
            "type": "string",
            "description": "Example value.\nexample@email.com, +919090909090, etc."
          }
        }
      },
      "IdentityField": {
        "type": "object",
        "description": "IdentityField : Identity field of Consent request template.",
        "required": [
          "title",
          "key",
          "dataType"
        ],
        "properties": {
          "title": {
            "type": "string",
            "description": "Field title."
          },
          "description": {
            "type": "string",
            "description": "Field description."
          },
          "key": {
            "type": "string",
            "description": "Field key."
          },
          "dataType": {
            "type": "string",
            "description": "Field data type."
          }
        }
      },
      "Idr": {
        "type": "object",
        "required": [
          "id",
          "name",
          "identifier",
          "amount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "IdrTransaction": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "IndividualConsentRequestDetails": {
        "type": "object",
        "description": "IndividualConsentRequestDetails : Individual consent request details.",
        "required": [
          "receiver",
          "id",
          "title",
          "description",
          "status",
          "createdAtUtc",
          "expiresAtUtc"
        ],
        "properties": {
          "receiver": {
            "type": "string",
            "description": "Name of request receiver individual."
          },
          "id": {
            "type": "string",
            "description": "Consent request id"
          },
          "templateId": {
            "type": "string",
            "description": "Consent request template id"
          },
          "consentId": {
            "type": "string",
            "description": "Consent id"
          },
          "title": {
            "type": "string",
            "description": "Consent request title."
          },
          "description": {
            "type": "string",
            "description": "Consent request description."
          },
          "purpose": {
            "type": "string",
            "description": "Consent request purpose."
          },
          "status": {
            "$ref": "#/components/schemas/DataConsentStatus"
          },
          "transactionId": {
            "type": "string",
            "description": "Transaction id"
          },
          "createdAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Request creation datetime in UTC timezone"
          },
          "expiresAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Request expiration datetime in UTC timezone"
          }
        }
      },
      "IndividualConsentRequestTemplateDetails": {
        "type": "object",
        "description": "IndividualConsentRequestTemplateDetails :  Individual consent request template details.",
        "required": [
          "id",
          "title",
          "description",
          "shortId",
          "status",
          "createdBy",
          "createdAtUtc"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Consent request template id."
          },
          "title": {
            "type": "string",
            "description": "Consent request template title."
          },
          "description": {
            "type": "string",
            "description": "Consent request template description."
          },
          "purpose": {
            "type": "string",
            "description": "Consent request template purpose."
          },
          "shortId": {
            "type": "string",
            "description": "Consent request template short Id."
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ConsentRequestTemplateStatus"
              },
              {
                "description": "Consent request template status."
              }
            ]
          },
          "dataLife": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Life"
              },
              {
                "description": "Consent request template data life."
              }
            ]
          },
          "requestLife": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Life"
              },
              {
                "description": "Consent request template request life."
              }
            ]
          },
          "dataFrequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Life"
              },
              {
                "description": "Consent request template data frequency."
              }
            ]
          },
          "identifiers": {
            "type": "array",
            "description": "Consent request template identity fields.",
            "items": {
              "$ref": "#/components/schemas/IdentityField"
            }
          },
          "documents": {
            "type": "array",
            "description": "Consent request template document fields.",
            "items": {
              "$ref": "#/components/schemas/DocumentField"
            }
          },
          "medicalRecords": {
            "type": "array",
            "description": "Consent request template medical record fields.",
            "items": {
              "$ref": "#/components/schemas/MedicalRecordField"
            }
          },
          "financialAccounts": {
            "type": "array",
            "description": "Consent request template financial account fields.",
            "items": {
              "$ref": "#/components/schemas/FinancialAccountField"
            }
          },
          "createdBy": {
            "type": "string",
            "description": "Consent request template created by user."
          },
          "createdAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Consent request template created datetime in UTC timezone."
          },
          "approvedAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Consent request template approval datetime in UTC timezone."
          },
          "publishedAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Consent request template published datetime in UTC timezone."
          },
          "rejectedAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Consent request template rejection datetime in UTC timezone."
          },
          "rejectionReason": {
            "type": "string",
            "description": "Consent request template rejection reason."
          }
        }
      },
      "InsurancePolicy": {
        "type": "object",
        "required": [
          "id",
          "name",
          "identifier",
          "amount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "InsurancePolicyTransaction": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "Invit": {
        "type": "object",
        "required": [
          "id",
          "name",
          "identifier",
          "amount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "InvitTransaction": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "IssuedDocument": {
        "type": "object",
        "description": "IssuedDocument : Issued Document Identifier.",
        "required": [
          "id",
          "identifier",
          "documentType",
          "issuedTo",
          "issuedAtUtc",
          "acceptedAtUtc"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Document Id."
          },
          "identifier": {
            "type": "string",
            "description": "Document Identifier."
          },
          "documentType": {
            "type": "string",
            "description": "Document type name."
          },
          "issuedTo": {
            "type": "string",
            "description": "User name."
          },
          "issuedAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Issued datetime in UTC timezone."
          },
          "expiresAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Expires datetime in UTC timezone."
          },
          "acceptedAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Accepted datetime in UTC timezone."
          }
        }
      },
      "KeyValuePair": {
        "type": "object",
        "required": [
          "key",
          "value"
        ],
        "properties": {
          "key": {
            "type": "string"
          },
          "value": {
            "type": "string"
          }
        }
      },
      "Life": {
        "type": "object",
        "description": "Life : Life with unit and value.",
        "required": [
          "unit",
          "value"
        ],
        "properties": {
          "unit": {
            "type": "string",
            "description": "Life unit.\nExample: days, hours, minutes."
          },
          "value": {
            "type": "string",
            "description": "Life value in number."
          }
        }
      },
      "Loan": {
        "type": "object",
        "required": [
          "id",
          "name",
          "identifier",
          "amount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "LoanTransaction": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "MedicalRecordField": {
        "type": "object",
        "description": "MedicalRecordField : Medical record field of consent request template.",
        "required": [
          "fieldTitle",
          "fieldSlug",
          "drns"
        ],
        "properties": {
          "fieldTitle": {
            "type": "string",
            "description": "Field title."
          },
          "fieldSlug": {
            "type": "string",
            "description": "Field slug."
          },
          "drns": {
            "type": "array",
            "description": "Field DRNs.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "MutualFund": {
        "type": "object",
        "required": [
          "id",
          "name",
          "identifier",
          "balance",
          "profile",
          "summary",
          "masked_account_number",
          "linked_account_ref",
          "version"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "balance": {
            "type": "number",
            "format": "double"
          },
          "profile": {
            "$ref": "#/components/schemas/Profile"
          },
          "summary": {
            "$ref": "#/components/schemas/MutualFundSummary"
          },
          "masked_account_number": {
            "type": "string"
          },
          "linked_account_ref": {
            "type": "string"
          },
          "version": {
            "type": "number",
            "format": "float"
          }
        }
      },
      "MutualFundFundType": {
        "type": "string",
        "enum": [
          "Equity",
          "Debt",
          "Hybrid",
          "SolutionOrientedSchemes",
          "Others"
        ]
      },
      "MutualFundHolding": {
        "type": "object",
        "required": [
          "name",
          "isin",
          "folioNo",
          "mode",
          "units"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "amc": {
            "type": "string"
          },
          "registrar": {
            "type": "string"
          },
          "schemeCode": {
            "type": "string"
          },
          "isin": {
            "type": "string"
          },
          "ucc": {
            "type": "string"
          },
          "amfiCode": {
            "type": "string"
          },
          "folioNo": {
            "type": "string"
          },
          "dividendType": {
            "type": "string"
          },
          "fatcaStatus": {
            "type": "string"
          },
          "mode": {
            "$ref": "#/components/schemas/MutualFundHoldingMode"
          },
          "units": {
            "type": "number",
            "format": "double"
          },
          "closingUnits": {
            "type": "string"
          },
          "lienUnits": {
            "type": "string"
          },
          "rate": {
            "type": "string"
          },
          "nav": {
            "type": "string"
          },
          "lockingUnits": {
            "type": "string"
          }
        }
      },
      "MutualFundHoldingMode": {
        "type": "string",
        "enum": [
          "Demat",
          "Physical"
        ]
      },
      "MutualFundHoldings": {
        "type": "object",
        "required": [
          "holding"
        ],
        "properties": {
          "holding": {
            "$ref": "#/components/schemas/MutualFundHolding"
          }
        }
      },
      "MutualFundInvestment": {
        "type": "object",
        "required": [
          "holdings"
        ],
        "properties": {
          "holdings": {
            "$ref": "#/components/schemas/MutualFundHoldings"
          }
        }
      },
      "MutualFundSchemeCategory": {
        "type": "string",
        "enum": [
          "MultiCapFund",
          "LargeCapFund",
          "LargeAndMidCapFund",
          "MidcapFund",
          "SmallCapFund",
          "DividendYieldFund",
          "ValueFund",
          "ContraFund",
          "FocusedFund",
          "SectoralOrThematic",
          "Elss",
          "OvernightFund",
          "LiquidFund",
          "UltraShortDurationFund",
          "LowDurationFund",
          "MoneyMarketFund",
          "ShortDurationFund",
          "MediumDurationFund",
          "MediumToLongDurationFund",
          "LongDurationFund",
          "DynamicBond",
          "CorporateBondFund",
          "CreditRiskFund",
          "BankingAndPsuFund",
          "GiltFund",
          "GiltFundWith10YearConstantDuration",
          "FloaterFund",
          "ConservativeHybridFund",
          "BalancedHybridFund",
          "AggressiveHybridFund",
          "DynamicAssetAllocationOrBalancedAdvantage",
          "MultiAssetAllocation",
          "ArbitrageFund",
          "EquitySavings",
          "RetirementFund",
          "ChildrensFund",
          "IndexFundsOrEtfs",
          "FofsOverseasOrDomestic"
        ]
      },
      "MutualFundSchemeOption": {
        "type": "string",
        "enum": [
          "Reinvest",
          "Payout",
          "GrowthType"
        ]
      },
      "MutualFundSchemePlan": {
        "type": "string",
        "enum": [
          "Direct",
          "Regular"
        ]
      },
      "MutualFundSchemeType": {
        "type": "string",
        "enum": [
          "EquitySchemes",
          "DebtSchemes",
          "HybridSchemes",
          "SolutionOrientedSchemes",
          "OtherSchemes"
        ]
      },
      "MutualFundSummary": {
        "type": "object",
        "required": [
          "investment",
          "investmentValue",
          "currentValue"
        ],
        "properties": {
          "investment": {
            "$ref": "#/components/schemas/MutualFundInvestment"
          },
          "investmentValue": {
            "type": "number",
            "format": "double"
          },
          "currentValue": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "MutualFundTransaction": {
        "type": "object",
        "required": [
          "id",
          "amc",
          "registrar",
          "scheme_code",
          "scheme_plan",
          "isin",
          "amfi_code",
          "fund_type",
          "scheme_option",
          "scheme_types",
          "scheme_category",
          "ucc",
          "amount",
          "closing_units",
          "lien_units",
          "nav",
          "nav_date",
          "type",
          "order_date",
          "execution_date",
          "lockin_flag",
          "lockin_days",
          "mode",
          "narration"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "amc": {
            "type": "string"
          },
          "registrar": {
            "type": "string"
          },
          "scheme_code": {
            "type": "string"
          },
          "scheme_plan": {
            "$ref": "#/components/schemas/MutualFundSchemePlan"
          },
          "isin": {
            "type": "string"
          },
          "amfi_code": {
            "type": "string"
          },
          "fund_type": {
            "$ref": "#/components/schemas/MutualFundFundType"
          },
          "scheme_option": {
            "$ref": "#/components/schemas/MutualFundSchemeOption"
          },
          "scheme_types": {
            "$ref": "#/components/schemas/MutualFundSchemeType"
          },
          "scheme_category": {
            "$ref": "#/components/schemas/MutualFundSchemeCategory"
          },
          "ucc": {
            "type": "string"
          },
          "amount": {
            "type": "string"
          },
          "closing_units": {
            "type": "string"
          },
          "lien_units": {
            "type": "string"
          },
          "nav": {
            "type": "string"
          },
          "nav_date": {
            "type": "string",
            "format": "date-time"
          },
          "type": {
            "$ref": "#/components/schemas/MutualFundTransactionType"
          },
          "order_date": {
            "type": "string",
            "format": "date-time"
          },
          "execution_date": {
            "type": "string",
            "format": "date-time"
          },
          "lockin_flag": {
            "type": "string"
          },
          "lockin_days": {
            "type": "string"
          },
          "mode": {
            "$ref": "#/components/schemas/MutualFundHoldingMode"
          },
          "narration": {
            "type": "string"
          }
        }
      },
      "MutualFundTransactionType": {
        "type": "string",
        "enum": [
          "Buy",
          "Sell",
          "Others"
        ]
      },
      "Nps": {
        "type": "object",
        "required": [
          "id",
          "name",
          "identifier",
          "amount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "NpsTransaction": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "OrganizationConsentRequestDetails": {
        "type": "object",
        "description": "OrganizationConsentRequestDetails : Organization consent request details.",
        "required": [
          "receiver",
          "id",
          "title",
          "description",
          "status",
          "createdAtUtc",
          "expiresAtUtc"
        ],
        "properties": {
          "receiver": {
            "type": "string",
            "description": "Name of request receiver organization."
          },
          "id": {
            "type": "string",
            "description": "Consent request id"
          },
          "templateId": {
            "type": "string",
            "description": "Consent request template id"
          },
          "consentId": {
            "type": "string",
            "description": "Consent id"
          },
          "title": {
            "type": "string",
            "description": "Consent request title."
          },
          "description": {
            "type": "string",
            "description": "Consent request description."
          },
          "purpose": {
            "type": "string",
            "description": "Consent request purpose."
          },
          "status": {
            "$ref": "#/components/schemas/DataConsentStatus"
          },
          "transactionId": {
            "type": "string",
            "description": "Transaction id"
          },
          "createdAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Request creation datetime in UTC timezone"
          },
          "expiresAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Request expiration datetime in UTC timezone"
          }
        }
      },
      "OrganizationConsentRequestTemplateDetails": {
        "type": "object",
        "description": "OrganizationConsentRequestTemplateDetails : Organization consent request template details.",
        "required": [
          "id",
          "title",
          "description",
          "shortId",
          "status",
          "createdBy",
          "createdAtUtc"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Consent request template id."
          },
          "title": {
            "type": "string",
            "description": "Consent request template title."
          },
          "description": {
            "type": "string",
            "description": "Consent request template description."
          },
          "purpose": {
            "type": "string",
            "description": "Consent request template purpose."
          },
          "shortId": {
            "type": "string",
            "description": "Consent request template short Id."
          },
          "status": {
            "allOf": [
              {
                "$ref": "#/components/schemas/ConsentRequestTemplateStatus"
              },
              {
                "description": "Consent request template status."
              }
            ]
          },
          "dataLife": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Life"
              },
              {
                "description": "Consent request template data life."
              }
            ]
          },
          "requestLife": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Life"
              },
              {
                "description": "Consent request template request life."
              }
            ]
          },
          "dataFrequency": {
            "allOf": [
              {
                "$ref": "#/components/schemas/Life"
              },
              {
                "description": "Consent request template data frequency."
              }
            ]
          },
          "identifiers": {
            "type": "array",
            "description": "Consent request template identity fields.",
            "items": {
              "$ref": "#/components/schemas/IdentityField"
            }
          },
          "documents": {
            "type": "array",
            "description": "Consent request template document fields.",
            "items": {
              "$ref": "#/components/schemas/DocumentField"
            }
          },
          "financialAccounts": {
            "type": "array",
            "description": "Consent request template financial account fields.",
            "items": {
              "$ref": "#/components/schemas/FinancialAccountField"
            }
          },
          "createdBy": {
            "type": "string",
            "description": "Consent request template created by user."
          },
          "createdAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Consent request template created datetime in UTC timezone."
          },
          "approvedAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Consent request template approval datetime in UTC timezone."
          },
          "publishedAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Consent request template published datetime in UTC timezone."
          },
          "rejectedAtUtc": {
            "type": "string",
            "format": "date-time",
            "description": "Consent request template rejection datetime in UTC timezone."
          },
          "rejectionReason": {
            "type": "string",
            "description": "Consent request template rejection reason."
          }
        }
      },
      "PaginatedListOfConsents": {
        "type": "object",
        "required": [
          "pageNo",
          "pageSize",
          "totalPage",
          "items"
        ],
        "properties": {
          "pageNo": {
            "type": "integer",
            "format": "uint64"
          },
          "pageSize": {
            "type": "integer",
            "format": "uint64"
          },
          "totalPage": {
            "type": "integer",
            "format": "uint64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Consent"
            }
          }
        }
      },
      "PaginatedListOfConsentRequestTemplates": {
        "type": "object",
        "required": [
          "pageNo",
          "pageSize",
          "totalPage",
          "items"
        ],
        "properties": {
          "pageNo": {
            "type": "integer",
            "format": "uint64"
          },
          "pageSize": {
            "type": "integer",
            "format": "uint64"
          },
          "totalPage": {
            "type": "integer",
            "format": "uint64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConsentRequestTemplate"
            }
          }
        }
      },
      "PaginatedListOfDataProcessingAgreements": {
        "type": "object",
        "required": [
          "pageNo",
          "pageSize",
          "totalPage",
          "items"
        ],
        "properties": {
          "pageNo": {
            "type": "integer",
            "format": "uint64"
          },
          "pageSize": {
            "type": "integer",
            "format": "uint64"
          },
          "totalPage": {
            "type": "integer",
            "format": "uint64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataProcessingAgreement"
            }
          }
        }
      },
      "PaginatedListOfDataProviders": {
        "type": "object",
        "required": [
          "pageNo",
          "pageSize",
          "totalPage",
          "items"
        ],
        "properties": {
          "pageNo": {
            "type": "integer",
            "format": "uint64"
          },
          "pageSize": {
            "type": "integer",
            "format": "uint64"
          },
          "totalPage": {
            "type": "integer",
            "format": "uint64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DataProvider"
            }
          }
        }
      },
      "PaginatedListOfDocumentTypes": {
        "type": "object",
        "required": [
          "pageNo",
          "pageSize",
          "totalPage",
          "items"
        ],
        "properties": {
          "pageNo": {
            "type": "integer",
            "format": "uint64"
          },
          "pageSize": {
            "type": "integer",
            "format": "uint64"
          },
          "totalPage": {
            "type": "integer",
            "format": "uint64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DocumentType"
            }
          }
        }
      },
      "PaginatedListOfFinancialAccountTransactions": {
        "type": "object",
        "required": [
          "pageNo",
          "pageSize",
          "totalPage",
          "items"
        ],
        "properties": {
          "pageNo": {
            "type": "integer",
            "format": "uint64"
          },
          "pageSize": {
            "type": "integer",
            "format": "uint64"
          },
          "totalPage": {
            "type": "integer",
            "format": "uint64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FinancialAccountTransaction"
            }
          }
        }
      },
      "PaginatedListOfIndividualConsentRequestDetailss": {
        "type": "object",
        "required": [
          "pageNo",
          "pageSize",
          "totalPage",
          "items"
        ],
        "properties": {
          "pageNo": {
            "type": "integer",
            "format": "uint64"
          },
          "pageSize": {
            "type": "integer",
            "format": "uint64"
          },
          "totalPage": {
            "type": "integer",
            "format": "uint64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IndividualConsentRequestDetails"
            }
          }
        }
      },
      "PaginatedListOfIssuedDocuments": {
        "type": "object",
        "required": [
          "pageNo",
          "pageSize",
          "totalPage",
          "items"
        ],
        "properties": {
          "pageNo": {
            "type": "integer",
            "format": "uint64"
          },
          "pageSize": {
            "type": "integer",
            "format": "uint64"
          },
          "totalPage": {
            "type": "integer",
            "format": "uint64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/IssuedDocument"
            }
          }
        }
      },
      "PaginatedListOfOrganizationConsentRequestDetailss": {
        "type": "object",
        "required": [
          "pageNo",
          "pageSize",
          "totalPage",
          "items"
        ],
        "properties": {
          "pageNo": {
            "type": "integer",
            "format": "uint64"
          },
          "pageSize": {
            "type": "integer",
            "format": "uint64"
          },
          "totalPage": {
            "type": "integer",
            "format": "uint64"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/OrganizationConsentRequestDetails"
            }
          }
        }
      },
      "PaymentOrderItem": {
        "type": "object",
        "required": [
          "name",
          "amount"
        ],
        "properties": {
          "name": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "PaymentRequest": {
        "type": "object",
        "required": [
          "identifier",
          "items",
          "currencyCode",
          "description",
          "dueByUtc"
        ],
        "properties": {
          "identifier": {
            "type": "string"
          },
          "items": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PaymentOrderItem"
            }
          },
          "currencyCode": {
            "type": "string"
          },
          "paymentUrl": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "dueByUtc": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "Ppf": {
        "type": "object",
        "required": [
          "id",
          "name",
          "identifier",
          "amount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "PpfTransaction": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "Profile": {
        "type": "object",
        "required": [
          "holders"
        ],
        "properties": {
          "holders": {
            "$ref": "#/components/schemas/Holders"
          }
        }
      },
      "PushUriRequest": {
        "type": "object",
        "required": [
          "uriDetails"
        ],
        "properties": {
          "uriDetails": {
            "$ref": "#/components/schemas/UriDetails"
          },
          "ns2": {
            "type": "string"
          },
          "ver": {
            "type": "string"
          },
          "ts": {
            "type": "string"
          },
          "txn": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          },
          "keyHash": {
            "type": "string"
          }
        }
      },
      "PushUriResponse": {
        "type": "object",
        "properties": {
          "responseStatus": {
            "type": "string"
          },
          "responseMessage": {
            "type": "string"
          },
          "ns2": {
            "type": "string"
          },
          "ver": {
            "type": "string"
          },
          "ts": {
            "type": "string"
          },
          "txn": {
            "type": "string"
          },
          "orgId": {
            "type": "string"
          }
        }
      },
      "RecurringDeposit": {
        "type": "object",
        "required": [
          "id",
          "name",
          "identifier",
          "amount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "RecurringDepositTransaction": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "Reit": {
        "type": "object",
        "required": [
          "id",
          "name",
          "identifier",
          "amount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "ReitTransaction": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "SelectedFinancialAccountType": {
        "type": "object",
        "description": "SelectedFinancialAccountType : Selected financial account type of financial account field of consent request template.",
        "required": [
          "subCategory",
          "drns"
        ],
        "properties": {
          "subCategory": {
            "allOf": [
              {
                "$ref": "#/components/schemas/FinancialAccountSubCategoryType"
              },
              {
                "description": "Financial account sub category."
              }
            ]
          },
          "drns": {
            "type": "array",
            "description": "DRNs.",
            "items": {
              "type": "string"
            }
          }
        }
      },
      "Sip": {
        "type": "object",
        "required": [
          "id",
          "name",
          "identifier",
          "amount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "SipTransaction": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "SupportedDocumentType": {
        "type": "object",
        "required": [
          "id",
          "name"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          }
        }
      },
      "SupportedEntityType": {
        "type": "string",
        "enum": [
          "Individual",
          "Organization",
          "Both"
        ]
      },
      "SupportedIdentifier": {
        "type": "object",
        "description": "Supported identifier details for a particular country.",
        "required": [
          "iso2",
          "name",
          "individualIdentifiers",
          "organizationIdentifiers"
        ],
        "properties": {
          "iso2": {
            "type": "string",
            "description": "Country ISO 2 code.\nExample: IN, US, etc."
          },
          "name": {
            "type": "string",
            "description": "Country name.\nExample: India, United States of America, etc."
          },
          "individualIdentifiers": {
            "type": "array",
            "description": "List of supported identifiers for an individual.",
            "items": {
              "$ref": "#/components/schemas/Identifier"
            }
          },
          "organizationIdentifiers": {
            "type": "array",
            "description": "List of supported identifiers for an organization.",
            "items": {
              "$ref": "#/components/schemas/Identifier"
            }
          }
        }
      },
      "TermDeposit": {
        "type": "object",
        "required": [
          "id",
          "name",
          "identifier",
          "amount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "TermDepositTransaction": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "Ulip": {
        "type": "object",
        "required": [
          "id",
          "name",
          "identifier",
          "amount"
        ],
        "properties": {
          "id": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "identifier": {
            "type": "string"
          },
          "amount": {
            "type": "number",
            "format": "double"
          }
        }
      },
      "UlipTransaction": {
        "type": "object",
        "required": [
          "id"
        ],
        "properties": {
          "id": {
            "type": "string"
          }
        }
      },
      "UpdateDataProcessingAgreement": {
        "type": "object",
        "description": "UpdateDataProcessingAgreement : Update data processing agreement details.",
        "required": [
          "version",
          "body",
          "attachmentUrl"
        ],
        "properties": {
          "version": {
            "type": "string",
            "description": "Agreement version."
          },
          "body": {
            "type": "string",
            "description": "Agreement body content."
          },
          "attachmentUrl": {
            "type": "string",
            "description": "Agreement attachment file URL."
          }
        }
      },
      "UploadDocumentResponse": {
        "type": "object",
        "description": "UploadDocumentResponse : Response of document upload.",
        "required": [
          "id",
          "message"
        ],
        "properties": {
          "id": {
            "type": "string",
            "description": "Document issue request Id."
          },
          "message": {
            "type": "string",
            "description": "Message."
          }
        }
      },
      "UriDetails": {
        "type": "object",
        "required": [
          "aadhaar",
          "uri",
          "docType",
          "docName",
          "docId",
          "issuedOn",
          "validFrom"
        ],
        "properties": {
          "aadhaar": {
            "type": "string"
          },
          "uri": {
            "type": "string"
          },
          "docType": {
            "type": "string"
          },
          "docName": {
            "type": "string"
          },
          "docId": {
            "type": "string"
          },
          "issuedOn": {
            "type": "string"
          },
          "validFrom": {
            "type": "string"
          },
          "validTo": {
            "type": "string"
          },
          "timestamp": {
            "type": "string"
          },
          "action": {
            "type": "string"
          }
        }
      }
    },
    "securitySchemes": {
      "OAuth2ClientCredentials": {
        "type": "oauth2",
        "description": "This API Uses OAuth2 Client Credentials Scheme.",
        "flows": {
          "clientCredentials": {
            "tokenUrl": "https://accounts.mydatamyconsent.com/connect/token",
            "refreshUrl": "https://accounts.mydatamyconsent.com/connect/token",
            "scopes": {
              "SupportedIdentifiers:Read": "Read SupportedIdentifiers.",
              "DataProviders:Read": "Read DataProviders.",
              "DataProcessingAgreements:Read": "Read DataProcessingAgreements.",
              "DataProcessingAgreements:Write": "Read & Write DataProcessingAgreements.",
              "Individuals:DocumentTypes:Read": "Read Individual DocumentTypes.",
              "Individuals:Documents:Read": "Read Individual Issued Documents.",
              "Individuals:Documents:Issue": "Issue Individual Documents.",
              "Organizations:DocumentTypes:Read": "Read Organization DocumentTypes.",
              "Organizations:Documents:Read": "Read Organization Issued Documents.",
              "Organizations:Documents:Issue": "Issue Organization Documents.",
              "Individuals:ConsentRequests:Request": "Request Individual Consent requests.",
              "Individuals:ConsentRequests:Cancel": "Cancel Individual Consent requests.",
              "Individuals:ConsentRequests:Read": "Read Individual Consent requests.",
              "Organizations:ConsentRequests:Request": "Request Organization Consent requests.",
              "Organizations:ConsentRequests:Cancel": "Cancel Organization Consent requests.",
              "Organizations:ConsentRequests:Read": "Read Organization Consent requests.",
              "Individuals:Consents:Read": "Read Individual Consents.",
              "Organizations:Consents:Read": "Read Organization Consents.",
              "Individuals:ConsentRequestTemplates:Read": "Read Individual Consent Request templates.",
              "Organizations:ConsentRequestTemplates:Read": "Read Organization Consent Request templates."
            }
          }
        }
      }
    }
  }
}